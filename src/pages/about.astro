---
// src/pages/en/about.astro (o el archivo para tu idioma por defecto, ej. src/pages/about.astro)
import Layout from '~/layouts/PageLayout.astro';

// Importar componentes
import Features2 from '~/components/widgets/Features2.astro';
import Features3 from '~/components/widgets/Features3.astro';
import Hero from '~/components/widgets/Hero.astro';
import Stats from '~/components/widgets/Stats.astro';
import Steps2 from '~/components/widgets/Steps2.astro';

import { getTranslator, defaultLang } from '~/i18n';

interface JsonModule {
  default?: Record<string, any>;
  [key: string]: any;
}

const currentLocaleFromAstro = Astro.currentLocale || defaultLang;

const translationModules = import.meta.glob('~/i18n/locales/**/translation.json', { eager: true }) as Record<string, JsonModule | undefined>;

let pageTranslations: Record<string, any> | undefined;
const expectedModulePath = `/src/i18n/locales/${currentLocaleFromAstro}/translation.json`;

const moduleCandidate = translationModules[expectedModulePath];

if (moduleCandidate) {
  pageTranslations = moduleCandidate.default || moduleCandidate;
} else {
  console.warn(`[Page: ${Astro.url.pathname}] Translation file for locale "${currentLocaleFromAstro}" not found at ${expectedModulePath}. Falling back to default locale "${defaultLang}".`);
  const defaultModulePath = `/src/i18n/locales/${defaultLang}/translation.json`;
  const defaultModuleCandidate = translationModules[defaultModulePath];
  if (defaultModuleCandidate) {
    pageTranslations = defaultModuleCandidate.default || defaultModuleCandidate;
  } else {
    console.error(`[Page: ${Astro.url.pathname}] CRITICAL: Default translation file for locale "${defaultLang}" not found. Using empty object for page content.`);
    pageTranslations = {};
  }
}

const t = getTranslator(pageTranslations || {}, currentLocaleFromAstro);

const metadata = {
  title: t('aboutpage.meta.title'),
  description: t('aboutpage.meta.description', {}, { defaultValue: 'Learn more about Bioenneagram.' }) // Ejemplo con defaultValue
  // robots: { index: true, follow: true } // Descomenta si es necesario
};

// URLs de imágenes (pueden ir al JSON si varían por idioma)
const heroImageAbout = 'https://images.unsplash.com/photo-1559136555-9303baea8ebd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80';
const features3ImageOtros = 'https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1740&q=80';

// Obtener datos de los arrays del JSON con fallback
const statsItems = t('aboutpage.stats.items', {}, { defaultValue: [] });
const features3EnfoquesItems = t('aboutpage.features3_enfoques.items', {}, { defaultValue: [] });
const features3OtrosItems = t('aboutpage.features3_otros.items', {}, { defaultValue: [] });
const steps2ValoresItems = t('aboutpage.steps2_valores.items', {}, { defaultValue: [] });
const steps2LogrosItems = t('aboutpage.steps2_logros.items', {}, { defaultValue: [] });
const features2UbicacionesItems = t('aboutpage.features2_ubicaciones.items', {}, { defaultValue: [] });
const features2SoporteItems = t('aboutpage.features2_soporte.items', {}, { defaultValue: [] });

// Para el título del Hero con placeholder
const heroTitleAboutHtml = t('aboutpage.hero.title', {
    '0': '<span class="text-accent dark:text-white highlight">Beautiful Website Templates</span>' // Ajusta este texto si es específico de "Nosotros"
});
---

<Layout metadata={metadata}>
  <Hero
    tagline={t('aboutpage.hero.tagline')}
    image={{
      src: heroImageAbout,
      alt: t('aboutpage.hero.imageAlt')
    }}
  >
    <Fragment slot="title" set:html={heroTitleAboutHtml} />
    <Fragment slot="subtitle">
      {t('aboutpage.hero.subtitle')}
    </Fragment>
  </Hero>

  <Stats
    title={t('aboutpage.stats.title')}
    stats={statsItems}
  />

  <Features3
    title={t('aboutpage.features3_enfoques.title')}
    subtitle={t('aboutpage.features3_enfoques.subtitle')}
    columns={3}
    isBeforeContent={true}
    items={features3EnfoquesItems}
  />

  <Features3
    columns={3}
    isAfterContent={true}
    items={features3OtrosItems}
    image={{
      src: features3ImageOtros,
      alt: t('aboutpage.features3_otros.imageAlt')
    }}
  />

  <Steps2
    title={t('aboutpage.steps2_valores.title')}
    subtitle={t('aboutpage.steps2_valores.subtitle')}
    items={steps2ValoresItems}
  />

  <Steps2
    title={t('aboutpage.steps2_logros.title')}
    subtitle={t('aboutpage.steps2_logros.subtitle')}
    isReversed={true}
    callToAction={{
      text: t('aboutpage.steps2_logros.callToActionText'),
      href: '/', // Este href podría ser dinámico o del JSON
    }}
    items={steps2LogrosItems}
  />

  <Features2
    title={t('aboutpage.features2_ubicaciones.title')}
    tagline={t('aboutpage.features2_ubicaciones.tagline')}
    columns={4}
    items={features2UbicacionesItems}
  />

  <Features2
    title={t('aboutpage.features2_soporte.title')}
    tagline={t('aboutpage.features2_soporte.tagline')}
    columns={2}
    items={features2SoporteItems}
  />
</Layout>