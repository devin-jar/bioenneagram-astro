---
// src/components/widgets/Note.astro
import { Icon } from 'astro-icon/components';
import type { NoteProps as WidgetNoteProps } from '~/types'; // Importa y renombra si es necesario

// Puedes usar la interfaz importada o mantener la local si es más simple para este componente
export interface Props extends WidgetNoteProps {} // Hereda de la global
// O definirla localmente si es muy simple y no necesita extender Widget:
// export interface Props {
//   title?: string;
//   values?: string | string[];
//   content?: string;
//   iconName?: string;
// }


const {
  title, // Ya no necesita valor por defecto aquí si se provee desde la página
  values,
  content, // Si usas content
  iconName = 'tabler:clover-2' // Puedes mantener el icono por defecto
} = Astro.props as Props; // Asegurar el tipo

// Lógica para mostrar 'values' si es un array o un string
let displayValues: string | undefined;
if (Array.isArray(values)) {
  displayValues = values.join(', '); // O cualquier otro separador, o renderizar como lista <ul>
} else {
  displayValues = values;
}
---

<section class="bg-blue-50 dark:bg-slate-800 not-prose">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 py-4 text-md text-center font-medium">
    {title && ( // Solo renderizar si hay un título
      <span class="font-bold">
        <Icon name={iconName} class="w-5 h-5 inline-block align-text-bottom" /> {title}
      </span>
    )}
    {values && ( // Solo renderizar si hay valores
      <span class={title ? ' ml-1' : ''}> {/* Añade un espacio si hay título */}
        {values}
      </span>
    )}
  </div>
</section>